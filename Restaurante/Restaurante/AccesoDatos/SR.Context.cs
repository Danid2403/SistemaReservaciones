//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccesoDatos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using Entidades;
    
    public partial class SREntities : DbContext
    {
        public SREntities()
            : base("name=SREntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Clientes> Clientes { get; set; }
        public virtual DbSet<Menu> Menu { get; set; }
        public virtual DbSet<Mesas> Mesas { get; set; }
        public virtual DbSet<Reservaciones> Reservaciones { get; set; }
    
        public virtual int delCliente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delCliente", idClienteParameter);
        }
    
        public virtual int delMenu(Nullable<int> idMenu)
        {
            var idMenuParameter = idMenu.HasValue ?
                new ObjectParameter("IdMenu", idMenu) :
                new ObjectParameter("IdMenu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delMenu", idMenuParameter);
        }
    
        public virtual int delMesa(Nullable<int> idMesa)
        {
            var idMesaParameter = idMesa.HasValue ?
                new ObjectParameter("IdMesa", idMesa) :
                new ObjectParameter("IdMesa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delMesa", idMesaParameter);
        }
    
        public virtual int delReservacion(Nullable<int> numeroReservacion)
        {
            var numeroReservacionParameter = numeroReservacion.HasValue ?
                new ObjectParameter("NumeroReservacion", numeroReservacion) :
                new ObjectParameter("NumeroReservacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delReservacion", numeroReservacionParameter);
        }
    
        public virtual int insCliente(string nombre, string apellidos, string telefono, string correoElectronico)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insCliente", nombreParameter, apellidosParameter, telefonoParameter, correoElectronicoParameter);
        }
    
        public virtual int insMenu(string descripcion, Nullable<decimal> precio)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insMenu", descripcionParameter, precioParameter);
        }
    
        public virtual int insMesa(Nullable<int> numeroMesa, string descripcionMesa)
        {
            var numeroMesaParameter = numeroMesa.HasValue ?
                new ObjectParameter("NumeroMesa", numeroMesa) :
                new ObjectParameter("NumeroMesa", typeof(int));
    
            var descripcionMesaParameter = descripcionMesa != null ?
                new ObjectParameter("DescripcionMesa", descripcionMesa) :
                new ObjectParameter("DescripcionMesa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insMesa", numeroMesaParameter, descripcionMesaParameter);
        }
    
        public virtual int insReservacion(Nullable<int> idCliente, Nullable<int> idMesa, Nullable<int> idMenu, Nullable<int> cantidad, Nullable<System.DateTime> fechaReservacion)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idMesaParameter = idMesa.HasValue ?
                new ObjectParameter("IdMesa", idMesa) :
                new ObjectParameter("IdMesa", typeof(int));
    
            var idMenuParameter = idMenu.HasValue ?
                new ObjectParameter("IdMenu", idMenu) :
                new ObjectParameter("IdMenu", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var fechaReservacionParameter = fechaReservacion.HasValue ?
                new ObjectParameter("FechaReservacion", fechaReservacion) :
                new ObjectParameter("FechaReservacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insReservacion", idClienteParameter, idMesaParameter, idMenuParameter, cantidadParameter, fechaReservacionParameter);
        }
    
        public virtual ObjectResult<recClientes_Result> recClientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<recClientes_Result>("recClientes");
        }
    
        public virtual ObjectResult<recClientesXId_Result> recClientesXId(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<recClientesXId_Result>("recClientesXId", idClienteParameter);
        }
    
        public virtual ObjectResult<recMenu_Result> recMenu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<recMenu_Result>("recMenu");
        }
    
        public virtual ObjectResult<recMenuXId_Result> recMenuXId(Nullable<int> idMenu)
        {
            var idMenuParameter = idMenu.HasValue ?
                new ObjectParameter("IdMenu", idMenu) :
                new ObjectParameter("IdMenu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<recMenuXId_Result>("recMenuXId", idMenuParameter);
        }
    
        public virtual ObjectResult<recMesas_Result> recMesas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<recMesas_Result>("recMesas");
        }
    
        public virtual ObjectResult<recMesasXId_Result> recMesasXId(Nullable<int> idMesa)
        {
            var idMesaParameter = idMesa.HasValue ?
                new ObjectParameter("IdMesa", idMesa) :
                new ObjectParameter("IdMesa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<recMesasXId_Result>("recMesasXId", idMesaParameter);
        }
    
        public virtual ObjectResult<recReservaciones_Result> recReservaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<recReservaciones_Result>("recReservaciones");
        }
    
        public virtual ObjectResult<recReservacionesXId_Result> recReservacionesXId(Nullable<int> numeroReservacion)
        {
            var numeroReservacionParameter = numeroReservacion.HasValue ?
                new ObjectParameter("NumeroReservacion", numeroReservacion) :
                new ObjectParameter("NumeroReservacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<recReservacionesXId_Result>("recReservacionesXId", numeroReservacionParameter);
        }
    
        public virtual int updCliente(Nullable<int> idCliente, string nombre, string apellidos, string telefono, string correoElectronico)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updCliente", idClienteParameter, nombreParameter, apellidosParameter, telefonoParameter, correoElectronicoParameter);
        }
    
        public virtual int updMenu(Nullable<int> idMenu, string descripcion, Nullable<decimal> precio)
        {
            var idMenuParameter = idMenu.HasValue ?
                new ObjectParameter("IdMenu", idMenu) :
                new ObjectParameter("IdMenu", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updMenu", idMenuParameter, descripcionParameter, precioParameter);
        }
    
        public virtual int updMesa(Nullable<int> idMesa, Nullable<int> numeroMesa, string descripcionMesa)
        {
            var idMesaParameter = idMesa.HasValue ?
                new ObjectParameter("IdMesa", idMesa) :
                new ObjectParameter("IdMesa", typeof(int));
    
            var numeroMesaParameter = numeroMesa.HasValue ?
                new ObjectParameter("NumeroMesa", numeroMesa) :
                new ObjectParameter("NumeroMesa", typeof(int));
    
            var descripcionMesaParameter = descripcionMesa != null ?
                new ObjectParameter("DescripcionMesa", descripcionMesa) :
                new ObjectParameter("DescripcionMesa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updMesa", idMesaParameter, numeroMesaParameter, descripcionMesaParameter);
        }
    
        public virtual int updReservacion(Nullable<int> numeroReservacion, Nullable<int> idCliente, Nullable<int> idMesa, Nullable<int> idMenu, Nullable<int> cantidad, Nullable<System.DateTime> fechaReservacion)
        {
            var numeroReservacionParameter = numeroReservacion.HasValue ?
                new ObjectParameter("NumeroReservacion", numeroReservacion) :
                new ObjectParameter("NumeroReservacion", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idMesaParameter = idMesa.HasValue ?
                new ObjectParameter("IdMesa", idMesa) :
                new ObjectParameter("IdMesa", typeof(int));
    
            var idMenuParameter = idMenu.HasValue ?
                new ObjectParameter("IdMenu", idMenu) :
                new ObjectParameter("IdMenu", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var fechaReservacionParameter = fechaReservacion.HasValue ?
                new ObjectParameter("FechaReservacion", fechaReservacion) :
                new ObjectParameter("FechaReservacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updReservacion", numeroReservacionParameter, idClienteParameter, idMesaParameter, idMenuParameter, cantidadParameter, fechaReservacionParameter);
        }
    }
}
